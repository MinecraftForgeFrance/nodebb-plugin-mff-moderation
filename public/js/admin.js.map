{"version":3,"sources":["../../js/admin.js"],"names":["$","readTypeDataFromServer","checkRadioButton","checkInputTypeWarning","radioButton","prop","click","tId","attr","replace","dd","charAt","toLowerCase","substring","sendTypeWarning","listInput","titleTypeJson","typeJson","title","level","timeNumber","selectUnitTime","console","log","i","input","value","socket","emit","err","result","alert","focusout","length","toggleButton","state","button","not"],"mappings":";;AAAA;;AAEAA,EAAE,YAAM;AACJC;AACAC;AACAC;AACH,CAJD;;AAMAD,mBAAmB,4BAAM;AACrB,QAAIE,cAAcJ,EAAE,QAAF,CAAlB;AACAI,gBAAYC,IAAZ,CAAiB,SAAjB,EAA4B,KAA5B;AACAD,gBAAYE,KAAZ,CAAkB,YAAY;AAC1B,YAAIC,MAAMP,EAAE,IAAF,EAAQQ,IAAR,CAAa,IAAb,EAAmBC,OAAnB,CAA2B,OAA3B,EAAoC,EAApC,CAAV;AACA,YAAIC,KAAKH,IAAII,MAAJ,CAAW,CAAX,EAAcC,WAAd,KAA8BL,IAAIM,SAAJ,CAAc,CAAd,CAAvC;AACAb,UAAE,8BAAF,EAAkCQ,IAAlC,CAAuC,QAAvC,EAAiD,IAAjD;AACAR,gBAAMU,EAAN,EAAYF,IAAZ,CAAiB,QAAjB,EAA2B,KAA3B;AACH,KALD;AAMH,CATD;;AAWAM,kBAAkB,yBAACC,SAAD,EAAe;AAC7B,QAAMC,gBAAgB,CAAC,OAAD,EAAU,OAAV,EAAmB,YAAnB,EAAiC,gBAAjC,CAAtB;AACA,QAAMC,WAAW;AACbC,eAAO,EADM;AAEbC,eAAO,CAFM;AAGbC,oBAAY,CAHC;AAIbC,wBAAgB;AAJH,KAAjB;AAMAC,YAAQC,GAAR,CAAYR,SAAZ;AACA,QAAIS,IAAI,CAAR;AAT6B;AAAA;AAAA;;AAAA;AAU7B,6BAAmBT,SAAnB,8HAA8B;AAAA,gBAApBU,KAAoB;;AAC1BH,oBAAQC,GAAR,CAAYE,MAAMC,KAAlB;AACAT,qBAASD,cAAcQ,GAAd,CAAT,IAA+BC,MAAMC,KAArC;AACH;AAb4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAe7BJ,YAAQC,GAAR,CAAYN,QAAZ;AACAjB,MAAE,mBAAF,EAAuBM,KAAvB,CAA6B,YAAM;AAC/BqB,eAAOC,IAAP,CAAY,qBAAZ,EAAmCX,QAAnC,EAA6C,UAACY,GAAD,EAAMC,MAAN,EAAiB;AAC1DC,kBAAMD,MAAN;AACA9B,cAAE,2BAAF;AACH,SAHD;AAIH,KALD;AAMH,CAtBD;;AAwBAG,wBAAwB,iCAAM;AAC1BH,MAAE,0BAAF,EAA8BgC,QAA9B,CAAuC,YAAY;AAC/C,YAAIhC,EAAE,kCAAF,EAAsCiC,MAAtC,KAAiD,CAArD,EAAwD;AACpDC,yBAAa,KAAb;AACH,SAFD,MAEO;AACHA,yBAAa,IAAb;AACH;AACJ,KAND;AAOH,CARD;;AAUAA,eAAe,sBAACC,KAAD,EAAW;AACtB,QAAIC,SAASpC,EAAE,QAAF,CAAb;AACAoC,WAAO5B,IAAP,CAAY,UAAZ,EAAwB2B,KAAxB;AACA,QAAI,CAACA,KAAL,EAAY;AACR,YAAIpB,YAAYf,EAAE,2BAAF,EAA+BqC,GAA/B,CAAmC,QAAnC,CAAhB;AACAvB,wBAAgBC,SAAhB;AACH;AACJ,CAPD;;AASAd,yBAAyB,kCAAM;AAC3B,QAAMgB,WAAW;AACbC,eAAO,EADM;AAEbC,eAAO,CAFM;AAGbC,oBAAY,CAHC;AAIbC,wBAAgB;AAJH,KAAjB;AAMAM,WAAOC,IAAP,CAAY,yBAAZ,EAAuCX,QAAvC,EAAiD,UAACY,GAAD,EAAMC,MAAN,EAAiB;AAC9DR,gBAAQC,GAAR,CAAYO,MAAZ;AACH,KAFD;AAGH,CAVD","file":"admin.js","sourcesContent":["/* global $, socket*/\r\n\r\n$(() => {\r\n    readTypeDataFromServer();\r\n    checkRadioButton();\r\n    checkInputTypeWarning();\r\n});\r\n\r\ncheckRadioButton = () => {\r\n    let radioButton = $(\":radio\");\r\n    radioButton.prop(\"checked\", false);\r\n    radioButton.click(function () {\r\n        let tId = $(this).attr(\"id\").replace(\"radio\", \"\");\r\n        let dd = tId.charAt(0).toLowerCase() + tId.substring(1);\r\n        $('[data-group=\"sanctionRadio\"]').attr(\"hidden\", true);\r\n        $(`#${dd}`).attr(\"hidden\", false);\r\n    });\r\n};\r\n\r\nsendTypeWarning = (listInput) => {\r\n    const titleTypeJson = [\"title\", \"level\", \"timeNumber\", \"selectUnitTime\"];\r\n    const typeJson = {\r\n        title: \"\",\r\n        level: 0,\r\n        timeNumber: 0,\r\n        selectUnitTime: \"\"\r\n    };\r\n    console.log(listInput);\r\n    let i = 0;\r\n    for(const input of listInput) {\r\n        console.log(input.value);\r\n        typeJson[titleTypeJson[i++]] = input.value;\r\n    }\r\n\r\n    console.log(typeJson);\r\n    $(\"#add-type-warning\").click(() => {\r\n        socket.emit(\"modules.typeWarning\", typeJson, (err, result) => {\r\n            alert(result);\r\n            $(\"#form-type-warning :reset\");\r\n        });\r\n    });\r\n};\r\n\r\ncheckInputTypeWarning = () => {\r\n    $(\"#form-type-warning input\").focusout(function () {\r\n        if ($(\"#form-type-warning input:invalid\").length === 0) {\r\n            toggleButton(false);\r\n        } else {\r\n            toggleButton(true);\r\n        }\r\n    });\r\n};\r\n\r\ntoggleButton = (state) => {\r\n    let button = $(\"button\");\r\n    button.attr(\"disabled\", state);\r\n    if (!state) {\r\n        let listInput = $(\"#form-type-warning :input\").not(\"button\");\r\n        sendTypeWarning(listInput);\r\n    }\r\n};\r\n\r\nreadTypeDataFromServer = () => {\r\n    const typeJson = {\r\n        title: \"\",\r\n        level: 0,\r\n        timeNumber: 0,\r\n        selectUnitTime: \"\"\r\n    };\r\n    socket.emit(\"modules.readTypeWarning\", typeJson, (err, result) => {\r\n        console.log(result);\r\n    });\r\n};\r\n"]}